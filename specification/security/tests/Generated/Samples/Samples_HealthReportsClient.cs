// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_HealthReportsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetHealthReport()
        {
            var credential = new DefaultAzureCredential();
            var client = new HealthReportsClient(credential);

            Response response = client.GetHealthReport("<resourceId>", "<healthReportName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetHealthReport_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new HealthReportsClient(credential);

            Response response = client.GetHealthReport("<resourceId>", "<healthReportName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("resourceDetails").GetProperty("source").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("resourceDetails").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("resourceDetails").GetProperty("connectorId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("nativeResourceId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("environmentHierarchyId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("organizationalHierarchyId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("subscriptionId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("healthDataClassification").GetProperty("component").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("healthDataClassification").GetProperty("scenario").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("healthDataClassification").GetProperty("scope").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("lastScannedDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("statusChangeDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("firstEvaluationDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("affectedDefendersPlans")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("affectedDefendersSubPlans")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("reportAdditionalData").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("securityValues")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueDescription").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("remediationSteps").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("remediationScript").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueAdditionalData").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetHealthReport_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new HealthReportsClient(credential);

            Response response = await client.GetHealthReportAsync("<resourceId>", "<healthReportName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetHealthReport_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new HealthReportsClient(credential);

            Response response = await client.GetHealthReportAsync("<resourceId>", "<healthReportName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("resourceDetails").GetProperty("source").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("resourceDetails").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("resourceDetails").GetProperty("connectorId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("nativeResourceId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("environmentHierarchyId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("organizationalHierarchyId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("subscriptionId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("healthDataClassification").GetProperty("component").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("healthDataClassification").GetProperty("scenario").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("healthDataClassification").GetProperty("scope").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("code").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("lastScannedDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("statusChangeDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("firstEvaluationDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("affectedDefendersPlans")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("affectedDefendersSubPlans")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("reportAdditionalData").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("securityValues")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueDescription").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("remediationSteps").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("remediationScript").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueAdditionalData").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetHealthReports()
        {
            var credential = new DefaultAzureCredential();
            var client = new HealthReportsClient(credential);

            foreach (var item in client.GetHealthReports("<scope>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetHealthReports_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new HealthReportsClient(credential);

            foreach (var item in client.GetHealthReports("<scope>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceDetails").GetProperty("source").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceDetails").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceDetails").GetProperty("connectorId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("nativeResourceId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("environmentHierarchyId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("organizationalHierarchyId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("subscriptionId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("tenantId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("healthDataClassification").GetProperty("component").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("healthDataClassification").GetProperty("scenario").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("healthDataClassification").GetProperty("scope").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("reason").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("lastScannedDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("statusChangeDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("firstEvaluationDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("affectedDefendersPlans")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("affectedDefendersSubPlans")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("reportAdditionalData").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("securityValues")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueDescription").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("remediationSteps").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("remediationScript").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueAdditionalData").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetHealthReports_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new HealthReportsClient(credential);

            await foreach (var item in client.GetHealthReportsAsync("<scope>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetHealthReports_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new HealthReportsClient(credential);

            await foreach (var item in client.GetHealthReportsAsync("<scope>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceDetails").GetProperty("source").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceDetails").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceDetails").GetProperty("connectorId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("nativeResourceId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("environmentHierarchyId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("organizationalHierarchyId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("subscriptionId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentDetails").GetProperty("tenantId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("healthDataClassification").GetProperty("component").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("healthDataClassification").GetProperty("scenario").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("healthDataClassification").GetProperty("scope").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("code").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("reason").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("lastScannedDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("statusChangeDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").GetProperty("firstEvaluationDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("affectedDefendersPlans")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("affectedDefendersSubPlans")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("reportAdditionalData").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("securityValues")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueDescription").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("remediationSteps").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("remediationScript").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("issues")[0].GetProperty("issueAdditionalData").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }
    }
}
