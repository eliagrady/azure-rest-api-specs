// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_MdeOnboardingsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMdeOnboardings()
        {
            var credential = new DefaultAzureCredential();
            var client = new MdeOnboardingsClient("<subscriptionId>", credential);

            Response response = client.GetMdeOnboardings(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMdeOnboardings_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new MdeOnboardingsClient("<subscriptionId>", credential);

            Response response = client.GetMdeOnboardings(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("onboardingPackageWindows").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("onboardingPackageLinux").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMdeOnboardings_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new MdeOnboardingsClient("<subscriptionId>", credential);

            Response response = await client.GetMdeOnboardingsAsync(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMdeOnboardings_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new MdeOnboardingsClient("<subscriptionId>", credential);

            Response response = await client.GetMdeOnboardingsAsync(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("onboardingPackageWindows").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("onboardingPackageLinux").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMdeOnboarding()
        {
            var credential = new DefaultAzureCredential();
            var client = new MdeOnboardingsClient("<subscriptionId>", credential);

            Response response = client.GetMdeOnboarding(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMdeOnboarding_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new MdeOnboardingsClient("<subscriptionId>", credential);

            Response response = client.GetMdeOnboarding(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("onboardingPackageWindows").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("onboardingPackageLinux").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMdeOnboarding_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new MdeOnboardingsClient("<subscriptionId>", credential);

            Response response = await client.GetMdeOnboardingAsync(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMdeOnboarding_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new MdeOnboardingsClient("<subscriptionId>", credential);

            Response response = await client.GetMdeOnboardingAsync(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("onboardingPackageWindows").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("onboardingPackageLinux").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }
    }
}
