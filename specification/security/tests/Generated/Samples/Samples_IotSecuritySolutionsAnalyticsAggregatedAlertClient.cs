// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_IotSecuritySolutionsAnalyticsAggregatedAlertClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIotSecuritySolutionsAnalyticsAggregatedAlert()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionsAnalyticsAggregatedAlertClient("<subscriptionId>", credential);

            Response response = client.GetIotSecuritySolutionsAnalyticsAggregatedAlert("<resourceGroupName>", "<solutionName>", "<aggregatedAlertName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIotSecuritySolutionsAnalyticsAggregatedAlert_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionsAnalyticsAggregatedAlertClient("<subscriptionId>", credential);

            Response response = client.GetIotSecuritySolutionsAnalyticsAggregatedAlert("<resourceGroupName>", "<solutionName>", "<aggregatedAlertName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("aggregatedDateUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("reportedSeverity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("count").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("effectedResourceType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("systemSource").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("actionTaken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("logAnalyticsQuery").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("topDevicesList")[0].GetProperty("deviceId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("topDevicesList")[0].GetProperty("alertsCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("topDevicesList")[0].GetProperty("lastOccurrence").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIotSecuritySolutionsAnalyticsAggregatedAlert_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionsAnalyticsAggregatedAlertClient("<subscriptionId>", credential);

            Response response = await client.GetIotSecuritySolutionsAnalyticsAggregatedAlertAsync("<resourceGroupName>", "<solutionName>", "<aggregatedAlertName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIotSecuritySolutionsAnalyticsAggregatedAlert_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionsAnalyticsAggregatedAlertClient("<subscriptionId>", credential);

            Response response = await client.GetIotSecuritySolutionsAnalyticsAggregatedAlertAsync("<resourceGroupName>", "<solutionName>", "<aggregatedAlertName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("aggregatedDateUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("reportedSeverity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("count").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("effectedResourceType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("systemSource").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("actionTaken").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("logAnalyticsQuery").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("topDevicesList")[0].GetProperty("deviceId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("topDevicesList")[0].GetProperty("alertsCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("topDevicesList")[0].GetProperty("lastOccurrence").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Dismiss()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionsAnalyticsAggregatedAlertClient("<subscriptionId>", credential);

            Response response = client.Dismiss("<resourceGroupName>", "<solutionName>", "<aggregatedAlertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Dismiss_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionsAnalyticsAggregatedAlertClient("<subscriptionId>", credential);

            Response response = client.Dismiss("<resourceGroupName>", "<solutionName>", "<aggregatedAlertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Dismiss_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionsAnalyticsAggregatedAlertClient("<subscriptionId>", credential);

            Response response = await client.DismissAsync("<resourceGroupName>", "<solutionName>", "<aggregatedAlertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Dismiss_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionsAnalyticsAggregatedAlertClient("<subscriptionId>", credential);

            Response response = await client.DismissAsync("<resourceGroupName>", "<solutionName>", "<aggregatedAlertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIotSecuritySolutionsAnalyticsAggregatedAlerts()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionsAnalyticsAggregatedAlertClient("<subscriptionId>", credential);

            foreach (var item in client.GetIotSecuritySolutionsAnalyticsAggregatedAlerts("<resourceGroupName>", "<solutionName>", 1234, new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIotSecuritySolutionsAnalyticsAggregatedAlerts_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionsAnalyticsAggregatedAlertClient("<subscriptionId>", credential);

            foreach (var item in client.GetIotSecuritySolutionsAnalyticsAggregatedAlerts("<resourceGroupName>", "<solutionName>", 1234, new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("aggregatedDateUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("reportedSeverity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("count").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("effectedResourceType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("systemSource").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("actionTaken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("logAnalyticsQuery").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("topDevicesList")[0].GetProperty("deviceId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("topDevicesList")[0].GetProperty("alertsCount").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("topDevicesList")[0].GetProperty("lastOccurrence").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIotSecuritySolutionsAnalyticsAggregatedAlerts_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionsAnalyticsAggregatedAlertClient("<subscriptionId>", credential);

            await foreach (var item in client.GetIotSecuritySolutionsAnalyticsAggregatedAlertsAsync("<resourceGroupName>", "<solutionName>", 1234, new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIotSecuritySolutionsAnalyticsAggregatedAlerts_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionsAnalyticsAggregatedAlertClient("<subscriptionId>", credential);

            await foreach (var item in client.GetIotSecuritySolutionsAnalyticsAggregatedAlertsAsync("<resourceGroupName>", "<solutionName>", 1234, new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("aggregatedDateUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("reportedSeverity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("count").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("effectedResourceType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("systemSource").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("actionTaken").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("logAnalyticsQuery").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("topDevicesList")[0].GetProperty("deviceId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("topDevicesList")[0].GetProperty("alertsCount").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("topDevicesList")[0].GetProperty("lastOccurrence").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }
    }
}
