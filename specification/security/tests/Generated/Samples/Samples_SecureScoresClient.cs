// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_SecureScoresClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecureScore()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecureScoresClient("<subscriptionId>", credential);

            Response response = client.GetSecureScore("<secureScoreName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecureScore_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecureScoresClient("<subscriptionId>", credential);

            Response response = client.GetSecureScore("<secureScoreName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("score").GetProperty("max").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("score").GetProperty("current").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("score").GetProperty("percentage").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("weight").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecureScore_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecureScoresClient("<subscriptionId>", credential);

            Response response = await client.GetSecureScoreAsync("<secureScoreName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecureScore_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecureScoresClient("<subscriptionId>", credential);

            Response response = await client.GetSecureScoreAsync("<secureScoreName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("score").GetProperty("max").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("score").GetProperty("current").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("score").GetProperty("percentage").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("weight").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecureScores()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecureScoresClient("<subscriptionId>", credential);

            foreach (var item in client.GetSecureScores(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecureScores_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecureScoresClient("<subscriptionId>", credential);

            foreach (var item in client.GetSecureScores(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("score").GetProperty("max").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("score").GetProperty("current").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("score").GetProperty("percentage").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("weight").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecureScores_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecureScoresClient("<subscriptionId>", credential);

            await foreach (var item in client.GetSecureScoresAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecureScores_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecureScoresClient("<subscriptionId>", credential);

            await foreach (var item in client.GetSecureScoresAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("score").GetProperty("max").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("score").GetProperty("current").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("score").GetProperty("percentage").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("weight").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }
    }
}
