// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_AlertsSuppressionRulesClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAlertsSuppressionRule()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            Response response = client.GetAlertsSuppressionRule("<alertsSuppressionRuleName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAlertsSuppressionRule_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            Response response = client.GetAlertsSuppressionRule("<alertsSuppressionRuleName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("expirationDateUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("comment").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("suppressionAlertsScope").GetProperty("allOf")[0].GetProperty("field").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAlertsSuppressionRule_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            Response response = await client.GetAlertsSuppressionRuleAsync("<alertsSuppressionRuleName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAlertsSuppressionRule_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            Response response = await client.GetAlertsSuppressionRuleAsync("<alertsSuppressionRuleName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("expirationDateUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("comment").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("suppressionAlertsScope").GetProperty("allOf")[0].GetProperty("field").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Update()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            var data = new { };

            Response response = client.Update("<alertsSuppressionRuleName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Update_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            var data = new
            {
                properties = new
                {
                    alertType = "<alertType>",
                    expirationDateUtc = "2022-05-10T18:57:31.2311892Z",
                    reason = "<reason>",
                    state = "Enabled",
                    comment = "<comment>",
                    suppressionAlertsScope = new
                    {
                        allOf = new[] {
                new {
                    field = "<field>",
                }
            },
                    },
                },
            };

            Response response = client.Update("<alertsSuppressionRuleName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("expirationDateUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("comment").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("suppressionAlertsScope").GetProperty("allOf")[0].GetProperty("field").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Update_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            var data = new { };

            Response response = await client.UpdateAsync("<alertsSuppressionRuleName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Update_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            var data = new
            {
                properties = new
                {
                    alertType = "<alertType>",
                    expirationDateUtc = "2022-05-10T18:57:31.2311892Z",
                    reason = "<reason>",
                    state = "Enabled",
                    comment = "<comment>",
                    suppressionAlertsScope = new
                    {
                        allOf = new[] {
                new {
                    field = "<field>",
                }
            },
                    },
                },
            };

            Response response = await client.UpdateAsync("<alertsSuppressionRuleName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("expirationDateUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("reason").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("comment").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("suppressionAlertsScope").GetProperty("allOf")[0].GetProperty("field").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            Response response = client.Delete("<alertsSuppressionRuleName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            Response response = client.Delete("<alertsSuppressionRuleName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            Response response = await client.DeleteAsync("<alertsSuppressionRuleName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            Response response = await client.DeleteAsync("<alertsSuppressionRuleName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAlertsSuppressionRules()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            foreach (var item in client.GetAlertsSuppressionRules("<alertType>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAlertsSuppressionRules_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            foreach (var item in client.GetAlertsSuppressionRules("<alertType>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("expirationDateUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("reason").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("comment").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("suppressionAlertsScope").GetProperty("allOf")[0].GetProperty("field").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAlertsSuppressionRules_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            await foreach (var item in client.GetAlertsSuppressionRulesAsync("<alertType>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAlertsSuppressionRules_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsSuppressionRulesClient("<subscriptionId>", credential);

            await foreach (var item in client.GetAlertsSuppressionRulesAsync("<alertType>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastModifiedUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("expirationDateUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("reason").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("comment").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("suppressionAlertsScope").GetProperty("allOf")[0].GetProperty("field").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }
    }
}
