// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_SecurityConnectorsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecurityConnector()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            Response response = client.GetSecurityConnector("<resourceGroupName>", "<securityConnectorName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecurityConnector_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            Response response = client.GetSecurityConnector("<resourceGroupName>", "<securityConnectorName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecurityConnector_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            Response response = await client.GetSecurityConnectorAsync("<resourceGroupName>", "<securityConnectorName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecurityConnector_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            Response response = await client.GetSecurityConnectorAsync("<resourceGroupName>", "<securityConnectorName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            var data = new { };

            Response response = client.CreateOrUpdate("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            var data = new
            {
                properties = new
                {
                    hierarchyIdentifier = "<hierarchyIdentifier>",
                    environmentName = "Azure",
                    offerings = new[] {
            new {
                nativeCloudConnection = new {
                    cloudRoleArn = "<cloudRoleArn>",
                },
                offeringType = "CspmMonitorAws",
            }
        },
                    environmentData = new
                    {
                        organizationalData = new
                        {
                            stacksetName = "<stacksetName>",
                            excludedAccountIds = new[] {
                    "<String>"
                },
                            organizationMembershipType = "Organization",
                        },
                        regions = new[] {
                "<String>"
            },
                        environmentType = "AwsAccount",
                    },
                },
            };

            Response response = client.CreateOrUpdate("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            var data = new { };

            Response response = await client.CreateOrUpdateAsync("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            var data = new
            {
                properties = new
                {
                    hierarchyIdentifier = "<hierarchyIdentifier>",
                    environmentName = "Azure",
                    offerings = new[] {
            new {
                nativeCloudConnection = new {
                    cloudRoleArn = "<cloudRoleArn>",
                },
                offeringType = "CspmMonitorAws",
            }
        },
                    environmentData = new
                    {
                        organizationalData = new
                        {
                            stacksetName = "<stacksetName>",
                            excludedAccountIds = new[] {
                    "<String>"
                },
                            organizationMembershipType = "Organization",
                        },
                        regions = new[] {
                "<String>"
            },
                        environmentType = "AwsAccount",
                    },
                },
            };

            Response response = await client.CreateOrUpdateAsync("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Update()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            var data = new { };

            Response response = client.Update("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Update_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            var data = new
            {
                properties = new
                {
                    hierarchyIdentifier = "<hierarchyIdentifier>",
                    environmentName = "Azure",
                    offerings = new[] {
            new {
                nativeCloudConnection = new {
                    cloudRoleArn = "<cloudRoleArn>",
                },
                offeringType = "CspmMonitorAws",
            }
        },
                    environmentData = new
                    {
                        organizationalData = new
                        {
                            stacksetName = "<stacksetName>",
                            excludedAccountIds = new[] {
                    "<String>"
                },
                            organizationMembershipType = "Organization",
                        },
                        regions = new[] {
                "<String>"
            },
                        environmentType = "AwsAccount",
                    },
                },
            };

            Response response = client.Update("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Update_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            var data = new { };

            Response response = await client.UpdateAsync("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Update_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            var data = new
            {
                properties = new
                {
                    hierarchyIdentifier = "<hierarchyIdentifier>",
                    environmentName = "Azure",
                    offerings = new[] {
            new {
                nativeCloudConnection = new {
                    cloudRoleArn = "<cloudRoleArn>",
                },
                offeringType = "CspmMonitorAws",
            }
        },
                    environmentData = new
                    {
                        organizationalData = new
                        {
                            stacksetName = "<stacksetName>",
                            excludedAccountIds = new[] {
                    "<String>"
                },
                            organizationMembershipType = "Organization",
                        },
                        regions = new[] {
                "<String>"
            },
                        environmentType = "AwsAccount",
                    },
                },
            };

            Response response = await client.UpdateAsync("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            Response response = client.Delete("<resourceGroupName>", "<securityConnectorName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            Response response = client.Delete("<resourceGroupName>", "<securityConnectorName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            Response response = await client.DeleteAsync("<resourceGroupName>", "<securityConnectorName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            Response response = await client.DeleteAsync("<resourceGroupName>", "<securityConnectorName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecurityConnectors()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            foreach (var item in client.GetSecurityConnectors(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecurityConnectors_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            foreach (var item in client.GetSecurityConnectors(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecurityConnectors_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            await foreach (var item in client.GetSecurityConnectorsAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecurityConnectors_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            await foreach (var item in client.GetSecurityConnectorsAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecurityConnectorsByResourceGroup()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            foreach (var item in client.GetSecurityConnectorsByResourceGroup("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecurityConnectorsByResourceGroup_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            foreach (var item in client.GetSecurityConnectorsByResourceGroup("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecurityConnectorsByResourceGroup_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            await foreach (var item in client.GetSecurityConnectorsByResourceGroupAsync("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecurityConnectorsByResourceGroup_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityConnectorsClient("<subscriptionId>", credential);

            await foreach (var item in client.GetSecurityConnectorsByResourceGroupAsync("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }
    }
}
