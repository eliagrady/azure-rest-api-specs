// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_TasksClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSubscriptionLevelTask()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.GetSubscriptionLevelTask("<taskName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSubscriptionLevelTask_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.GetSubscriptionLevelTask("<taskName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("creationTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("securityTaskParameters").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastStateChangeTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subState").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSubscriptionLevelTask_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.GetSubscriptionLevelTaskAsync("<taskName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSubscriptionLevelTask_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.GetSubscriptionLevelTaskAsync("<taskName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("creationTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("securityTaskParameters").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastStateChangeTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subState").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateSubscriptionLevelTaskState()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateSubscriptionLevelTaskState("<taskName>", "<taskUpdateActionType>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateSubscriptionLevelTaskState_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateSubscriptionLevelTaskState("<taskName>", "<taskUpdateActionType>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateSubscriptionLevelTaskState_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateSubscriptionLevelTaskStateAsync("<taskName>", "<taskUpdateActionType>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateSubscriptionLevelTaskState_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateSubscriptionLevelTaskStateAsync("<taskName>", "<taskUpdateActionType>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetResourceGroupLevelTask()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.GetResourceGroupLevelTask("<resourceGroupName>", "<taskName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetResourceGroupLevelTask_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.GetResourceGroupLevelTask("<resourceGroupName>", "<taskName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("creationTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("securityTaskParameters").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastStateChangeTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subState").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetResourceGroupLevelTask_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.GetResourceGroupLevelTaskAsync("<resourceGroupName>", "<taskName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetResourceGroupLevelTask_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.GetResourceGroupLevelTaskAsync("<resourceGroupName>", "<taskName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("creationTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("securityTaskParameters").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("lastStateChangeTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subState").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateResourceGroupLevelTaskState()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateResourceGroupLevelTaskState("<resourceGroupName>", "<taskName>", "<taskUpdateActionType>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateResourceGroupLevelTaskState_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateResourceGroupLevelTaskState("<resourceGroupName>", "<taskName>", "<taskUpdateActionType>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateResourceGroupLevelTaskState_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateResourceGroupLevelTaskStateAsync("<resourceGroupName>", "<taskName>", "<taskUpdateActionType>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateResourceGroupLevelTaskState_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateResourceGroupLevelTaskStateAsync("<resourceGroupName>", "<taskName>", "<taskUpdateActionType>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTasks()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetTasks("<filter>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTasks_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetTasks("<filter>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("creationTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityTaskParameters").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastStateChangeTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subState").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTasks_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetTasksAsync("<filter>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTasks_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetTasksAsync("<filter>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("creationTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityTaskParameters").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastStateChangeTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subState").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTasksByHomeRegion()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetTasksByHomeRegion("<filter>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTasksByHomeRegion_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetTasksByHomeRegion("<filter>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("creationTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityTaskParameters").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastStateChangeTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subState").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTasksByHomeRegion_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetTasksByHomeRegionAsync("<filter>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTasksByHomeRegion_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetTasksByHomeRegionAsync("<filter>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("creationTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityTaskParameters").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastStateChangeTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subState").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTasksByResourceGroup()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetTasksByResourceGroup("<resourceGroupName>", "<filter>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTasksByResourceGroup_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetTasksByResourceGroup("<resourceGroupName>", "<filter>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("creationTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityTaskParameters").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastStateChangeTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subState").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTasksByResourceGroup_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetTasksByResourceGroupAsync("<resourceGroupName>", "<filter>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTasksByResourceGroup_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new TasksClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetTasksByResourceGroupAsync("<resourceGroupName>", "<filter>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("state").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("creationTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityTaskParameters").GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("lastStateChangeTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subState").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }
    }
}
