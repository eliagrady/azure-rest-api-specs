// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_IngestionSettingsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIngestionSetting()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = client.GetIngestionSetting("<ingestionSettingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIngestionSetting_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = client.GetIngestionSetting("<ingestionSettingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIngestionSetting_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = await client.GetIngestionSettingAsync("<ingestionSettingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIngestionSetting_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = await client.GetIngestionSettingAsync("<ingestionSettingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Create()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            var data = new { };

            Response response = client.Create("<ingestionSettingName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Create_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            var data = new
            {
                properties = new { },
            };

            Response response = client.Create("<ingestionSettingName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Create_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            var data = new { };

            Response response = await client.CreateAsync("<ingestionSettingName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Create_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            var data = new
            {
                properties = new { },
            };

            Response response = await client.CreateAsync("<ingestionSettingName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = client.Delete("<ingestionSettingName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = client.Delete("<ingestionSettingName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = await client.DeleteAsync("<ingestionSettingName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = await client.DeleteAsync("<ingestionSettingName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTokens()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = client.GetTokens("<ingestionSettingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTokens_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = client.GetTokens("<ingestionSettingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("token").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTokens_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = await client.GetTokensAsync("<ingestionSettingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTokens_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = await client.GetTokensAsync("<ingestionSettingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("token").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetConnectionStrings()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = client.GetConnectionStrings("<ingestionSettingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetConnectionStrings_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = client.GetConnectionStrings("<ingestionSettingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("value").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetConnectionStrings_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = await client.GetConnectionStringsAsync("<ingestionSettingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetConnectionStrings_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            Response response = await client.GetConnectionStringsAsync("<ingestionSettingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("value").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIngestionSettings()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            foreach (var item in client.GetIngestionSettings(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIngestionSettings_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            foreach (var item in client.GetIngestionSettings(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIngestionSettings_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            await foreach (var item in client.GetIngestionSettingsAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIngestionSettings_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IngestionSettingsClient("<subscriptionId>", credential);

            await foreach (var item in client.GetIngestionSettingsAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }
    }
}
