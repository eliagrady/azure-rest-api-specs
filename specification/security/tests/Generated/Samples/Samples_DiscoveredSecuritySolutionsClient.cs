// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_DiscoveredSecuritySolutionsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDiscoveredSecuritySolution()
        {
            var credential = new DefaultAzureCredential();
            var client = new DiscoveredSecuritySolutionsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.GetDiscoveredSecuritySolution("<resourceGroupName>", "<discoveredSecuritySolutionName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("securityFamily").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offer").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("publisher").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").ToString());
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDiscoveredSecuritySolution_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new DiscoveredSecuritySolutionsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.GetDiscoveredSecuritySolution("<resourceGroupName>", "<discoveredSecuritySolutionName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("securityFamily").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offer").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("publisher").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDiscoveredSecuritySolution_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new DiscoveredSecuritySolutionsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.GetDiscoveredSecuritySolutionAsync("<resourceGroupName>", "<discoveredSecuritySolutionName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("securityFamily").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offer").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("publisher").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").ToString());
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDiscoveredSecuritySolution_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new DiscoveredSecuritySolutionsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.GetDiscoveredSecuritySolutionAsync("<resourceGroupName>", "<discoveredSecuritySolutionName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("securityFamily").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("offer").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("publisher").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("sku").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDiscoveredSecuritySolutions()
        {
            var credential = new DefaultAzureCredential();
            var client = new DiscoveredSecuritySolutionsClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetDiscoveredSecuritySolutions(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityFamily").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offer").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("publisher").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").ToString());
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDiscoveredSecuritySolutions_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new DiscoveredSecuritySolutionsClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetDiscoveredSecuritySolutions(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityFamily").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offer").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("publisher").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDiscoveredSecuritySolutions_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new DiscoveredSecuritySolutionsClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetDiscoveredSecuritySolutionsAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityFamily").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offer").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("publisher").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").ToString());
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDiscoveredSecuritySolutions_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new DiscoveredSecuritySolutionsClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetDiscoveredSecuritySolutionsAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityFamily").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offer").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("publisher").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDiscoveredSecuritySolutionsByHomeRegion()
        {
            var credential = new DefaultAzureCredential();
            var client = new DiscoveredSecuritySolutionsClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetDiscoveredSecuritySolutionsByHomeRegion(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityFamily").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offer").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("publisher").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").ToString());
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDiscoveredSecuritySolutionsByHomeRegion_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new DiscoveredSecuritySolutionsClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetDiscoveredSecuritySolutionsByHomeRegion(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityFamily").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offer").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("publisher").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDiscoveredSecuritySolutionsByHomeRegion_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new DiscoveredSecuritySolutionsClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetDiscoveredSecuritySolutionsByHomeRegionAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityFamily").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offer").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("publisher").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").ToString());
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDiscoveredSecuritySolutionsByHomeRegion_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new DiscoveredSecuritySolutionsClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetDiscoveredSecuritySolutionsByHomeRegionAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("securityFamily").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("offer").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("publisher").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("sku").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }
    }
}
