// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_SecurityOperatorsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecurityOperators()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = client.GetSecurityOperators("<pricingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecurityOperators_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = client.GetSecurityOperators("<pricingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecurityOperators_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = await client.GetSecurityOperatorsAsync("<pricingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecurityOperators_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = await client.GetSecurityOperatorsAsync("<pricingName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecurityOperator()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = client.GetSecurityOperator("<pricingName>", "<securityOperatorName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSecurityOperator_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = client.GetSecurityOperator("<pricingName>", "<securityOperatorName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecurityOperator_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = await client.GetSecurityOperatorAsync("<pricingName>", "<securityOperatorName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSecurityOperator_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = await client.GetSecurityOperatorAsync("<pricingName>", "<securityOperatorName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = client.CreateOrUpdate("<pricingName>", "<securityOperatorName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = client.CreateOrUpdate("<pricingName>", "<securityOperatorName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = await client.CreateOrUpdateAsync("<pricingName>", "<securityOperatorName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = await client.CreateOrUpdateAsync("<pricingName>", "<securityOperatorName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("identity").GetProperty("principalId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("tenantId").ToString());
            Console.WriteLine(result.GetProperty("identity").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = client.Delete("<pricingName>", "<securityOperatorName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = client.Delete("<pricingName>", "<securityOperatorName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = await client.DeleteAsync("<pricingName>", "<securityOperatorName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SecurityOperatorsClient("<subscriptionId>", credential);

            Response response = await client.DeleteAsync("<pricingName>", "<securityOperatorName>");
            Console.WriteLine(response.Status);
        }
    }
}
