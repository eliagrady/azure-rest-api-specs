// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_ServerVulnerabilityAssessmentClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetServerVulnerabilityAssessmentsByExtendedResource()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            Response response = client.GetServerVulnerabilityAssessmentsByExtendedResource("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetServerVulnerabilityAssessmentsByExtendedResource_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            Response response = client.GetServerVulnerabilityAssessmentsByExtendedResource("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetServerVulnerabilityAssessmentsByExtendedResource_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            Response response = await client.GetServerVulnerabilityAssessmentsByExtendedResourceAsync("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetServerVulnerabilityAssessmentsByExtendedResource_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            Response response = await client.GetServerVulnerabilityAssessmentsByExtendedResourceAsync("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetServerVulnerabilityAssessment()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            Response response = client.GetServerVulnerabilityAssessment("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetServerVulnerabilityAssessment_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            Response response = client.GetServerVulnerabilityAssessment("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetServerVulnerabilityAssessment_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            Response response = await client.GetServerVulnerabilityAssessmentAsync("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetServerVulnerabilityAssessment_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            Response response = await client.GetServerVulnerabilityAssessmentAsync("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            Response response = client.CreateOrUpdate("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            Response response = client.CreateOrUpdate("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            Response response = await client.CreateOrUpdateAsync("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            Response response = await client.CreateOrUpdateAsync("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            var operation = client.Delete(WaitUntil.Completed, "<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>");

            Console.WriteLine(operation.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            var operation = client.Delete(WaitUntil.Completed, "<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>");

            Console.WriteLine(operation.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            var operation = await client.DeleteAsync(WaitUntil.Completed, "<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>");

            Console.WriteLine(operation.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

            var operation = await client.DeleteAsync(WaitUntil.Completed, "<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>");

            Console.WriteLine(operation.GetRawResponse().Status);
        }
    }
}
