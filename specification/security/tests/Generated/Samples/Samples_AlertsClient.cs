// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_AlertsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSubscriptionLevel()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.GetSubscriptionLevel("<alertName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSubscriptionLevel_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.GetSubscriptionLevel("<alertName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("systemAlertId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("productComponentName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("severity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("intent").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("startTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("resourceIdentifiers")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("extendedLinks")[0].GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertUri").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("timeGeneratedUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("productName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("processingEndTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("entities")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("isIncident").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("correlationKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("extendedProperties").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("compromisedEntity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("techniques")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subTechniques")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("supportingEvidence").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSubscriptionLevel_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.GetSubscriptionLevelAsync("<alertName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSubscriptionLevel_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.GetSubscriptionLevelAsync("<alertName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("systemAlertId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("productComponentName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("severity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("intent").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("startTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("resourceIdentifiers")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("extendedLinks")[0].GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertUri").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("timeGeneratedUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("productName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("processingEndTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("entities")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("isIncident").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("correlationKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("extendedProperties").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("compromisedEntity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("techniques")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subTechniques")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("supportingEvidence").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetResourceGroupLevel()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.GetResourceGroupLevel("<resourceGroupName>", "<alertName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetResourceGroupLevel_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.GetResourceGroupLevel("<resourceGroupName>", "<alertName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("systemAlertId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("productComponentName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("severity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("intent").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("startTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("resourceIdentifiers")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("extendedLinks")[0].GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertUri").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("timeGeneratedUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("productName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("processingEndTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("entities")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("isIncident").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("correlationKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("extendedProperties").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("compromisedEntity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("techniques")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subTechniques")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("supportingEvidence").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetResourceGroupLevel_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.GetResourceGroupLevelAsync("<resourceGroupName>", "<alertName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetResourceGroupLevel_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.GetResourceGroupLevelAsync("<resourceGroupName>", "<alertName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("systemAlertId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("productComponentName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("severity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("intent").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("startTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("endTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("resourceIdentifiers")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("extendedLinks")[0].GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("alertUri").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("timeGeneratedUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("productName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("processingEndTimeUtc").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("entities")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("isIncident").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("correlationKey").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("extendedProperties").GetProperty("<test>").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("compromisedEntity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("techniques")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("subTechniques")[0].ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("supportingEvidence").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateSubscriptionLevelStateToDismiss()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateSubscriptionLevelStateToDismiss("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateSubscriptionLevelStateToDismiss_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateSubscriptionLevelStateToDismiss("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateSubscriptionLevelStateToDismiss_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateSubscriptionLevelStateToDismissAsync("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateSubscriptionLevelStateToDismiss_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateSubscriptionLevelStateToDismissAsync("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateSubscriptionLevelStateToResolve()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateSubscriptionLevelStateToResolve("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateSubscriptionLevelStateToResolve_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateSubscriptionLevelStateToResolve("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateSubscriptionLevelStateToResolve_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateSubscriptionLevelStateToResolveAsync("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateSubscriptionLevelStateToResolve_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateSubscriptionLevelStateToResolveAsync("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateSubscriptionLevelStateToActivate()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateSubscriptionLevelStateToActivate("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateSubscriptionLevelStateToActivate_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateSubscriptionLevelStateToActivate("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateSubscriptionLevelStateToActivate_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateSubscriptionLevelStateToActivateAsync("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateSubscriptionLevelStateToActivate_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateSubscriptionLevelStateToActivateAsync("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateSubscriptionLevelStateToInProgress()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateSubscriptionLevelStateToInProgress("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateSubscriptionLevelStateToInProgress_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateSubscriptionLevelStateToInProgress("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateSubscriptionLevelStateToInProgress_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateSubscriptionLevelStateToInProgressAsync("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateSubscriptionLevelStateToInProgress_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateSubscriptionLevelStateToInProgressAsync("<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateResourceGroupLevelStateToResolve()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateResourceGroupLevelStateToResolve("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateResourceGroupLevelStateToResolve_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateResourceGroupLevelStateToResolve("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateResourceGroupLevelStateToResolve_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateResourceGroupLevelStateToResolveAsync("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateResourceGroupLevelStateToResolve_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateResourceGroupLevelStateToResolveAsync("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateResourceGroupLevelStateToDismiss()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateResourceGroupLevelStateToDismiss("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateResourceGroupLevelStateToDismiss_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateResourceGroupLevelStateToDismiss("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateResourceGroupLevelStateToDismiss_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateResourceGroupLevelStateToDismissAsync("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateResourceGroupLevelStateToDismiss_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateResourceGroupLevelStateToDismissAsync("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateResourceGroupLevelStateToActivate()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateResourceGroupLevelStateToActivate("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateResourceGroupLevelStateToActivate_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateResourceGroupLevelStateToActivate("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateResourceGroupLevelStateToActivate_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateResourceGroupLevelStateToActivateAsync("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateResourceGroupLevelStateToActivate_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateResourceGroupLevelStateToActivateAsync("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateResourceGroupLevelStateToInProgress()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateResourceGroupLevelStateToInProgress("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UpdateResourceGroupLevelStateToInProgress_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = client.UpdateResourceGroupLevelStateToInProgress("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateResourceGroupLevelStateToInProgress_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateResourceGroupLevelStateToInProgressAsync("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UpdateResourceGroupLevelStateToInProgress_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            Response response = await client.UpdateResourceGroupLevelStateToInProgressAsync("<resourceGroupName>", "<alertName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAlerts()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetAlerts(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAlerts_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetAlerts(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("systemAlertId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productComponentName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("severity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("intent").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("startTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("endTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceIdentifiers")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedLinks")[0].GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertUri").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("timeGeneratedUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("processingEndTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("entities")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("isIncident").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("correlationKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedProperties").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("compromisedEntity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("techniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subTechniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("supportingEvidence").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAlerts_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetAlertsAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAlerts_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetAlertsAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("systemAlertId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productComponentName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("severity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("intent").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("startTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("endTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceIdentifiers")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedLinks")[0].GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertUri").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("timeGeneratedUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("processingEndTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("entities")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("isIncident").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("correlationKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedProperties").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("compromisedEntity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("techniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subTechniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("supportingEvidence").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAlertsByResourceGroup()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetAlertsByResourceGroup("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetAlertsByResourceGroup_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetAlertsByResourceGroup("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("systemAlertId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productComponentName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("severity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("intent").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("startTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("endTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceIdentifiers")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedLinks")[0].GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertUri").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("timeGeneratedUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("processingEndTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("entities")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("isIncident").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("correlationKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedProperties").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("compromisedEntity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("techniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subTechniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("supportingEvidence").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAlertsByResourceGroup_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetAlertsByResourceGroupAsync("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetAlertsByResourceGroup_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetAlertsByResourceGroupAsync("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("systemAlertId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productComponentName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("severity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("intent").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("startTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("endTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceIdentifiers")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedLinks")[0].GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertUri").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("timeGeneratedUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("processingEndTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("entities")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("isIncident").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("correlationKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedProperties").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("compromisedEntity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("techniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subTechniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("supportingEvidence").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSubscriptionLevelByRegion()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetSubscriptionLevelByRegion(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSubscriptionLevelByRegion_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetSubscriptionLevelByRegion(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("systemAlertId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productComponentName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("severity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("intent").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("startTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("endTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceIdentifiers")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedLinks")[0].GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertUri").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("timeGeneratedUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("processingEndTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("entities")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("isIncident").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("correlationKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedProperties").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("compromisedEntity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("techniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subTechniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("supportingEvidence").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSubscriptionLevelByRegion_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetSubscriptionLevelByRegionAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSubscriptionLevelByRegion_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetSubscriptionLevelByRegionAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("systemAlertId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productComponentName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("severity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("intent").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("startTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("endTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceIdentifiers")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedLinks")[0].GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertUri").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("timeGeneratedUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("processingEndTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("entities")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("isIncident").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("correlationKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedProperties").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("compromisedEntity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("techniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subTechniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("supportingEvidence").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetResourceGroupLevelByRegion()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetResourceGroupLevelByRegion("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetResourceGroupLevelByRegion_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            foreach (var item in client.GetResourceGroupLevelByRegion("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("systemAlertId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productComponentName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("severity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("intent").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("startTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("endTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceIdentifiers")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedLinks")[0].GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertUri").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("timeGeneratedUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("processingEndTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("entities")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("isIncident").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("correlationKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedProperties").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("compromisedEntity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("techniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subTechniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("supportingEvidence").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetResourceGroupLevelByRegion_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetResourceGroupLevelByRegionAsync("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetResourceGroupLevelByRegion_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            await foreach (var item in client.GetResourceGroupLevelByRegionAsync("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("version").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertType").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("systemAlertId").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productComponentName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertDisplayName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("severity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("intent").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("startTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("endTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("resourceIdentifiers")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("remediationSteps")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("vendorName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedLinks")[0].GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("alertUri").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("timeGeneratedUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("productName").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("processingEndTimeUtc").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("entities")[0].GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("isIncident").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("correlationKey").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("extendedProperties").GetProperty("<test>").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("compromisedEntity").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("techniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("subTechniques")[0].ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("supportingEvidence").GetProperty("type").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Simulate()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            var data = new { };

            var operation = client.Simulate(WaitUntil.Completed, RequestContent.Create(data));

            Console.WriteLine(operation.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Simulate_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            var data = new
            {
                properties = new
                {
                    bundles = new[] {
            "AppServices"
        },
                    kind = "Bundles",
                },
            };

            var operation = client.Simulate(WaitUntil.Completed, RequestContent.Create(data));

            Console.WriteLine(operation.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Simulate_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            var data = new { };

            var operation = await client.SimulateAsync(WaitUntil.Completed, RequestContent.Create(data));

            Console.WriteLine(operation.GetRawResponse().Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Simulate_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new AlertsClient("<subscriptionId>", "<ascLocation>", credential);

            var data = new
            {
                properties = new
                {
                    bundles = new[] {
            "AppServices"
        },
                    kind = "Bundles",
                },
            };

            var operation = await client.SimulateAsync(WaitUntil.Completed, RequestContent.Create(data));

            Console.WriteLine(operation.GetRawResponse().Status);
        }
    }
}
