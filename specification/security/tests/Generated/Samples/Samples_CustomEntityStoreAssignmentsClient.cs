// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_CustomEntityStoreAssignmentsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetCustomEntityStoreAssignment()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            Response response = client.GetCustomEntityStoreAssignment("<resourceGroupName>", "<customEntityStoreAssignmentName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetCustomEntityStoreAssignment_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            Response response = client.GetCustomEntityStoreAssignment("<resourceGroupName>", "<customEntityStoreAssignmentName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("principal").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("entityStoreDatabaseLink").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetCustomEntityStoreAssignment_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            Response response = await client.GetCustomEntityStoreAssignmentAsync("<resourceGroupName>", "<customEntityStoreAssignmentName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetCustomEntityStoreAssignment_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            Response response = await client.GetCustomEntityStoreAssignmentAsync("<resourceGroupName>", "<customEntityStoreAssignmentName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("principal").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("entityStoreDatabaseLink").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Create()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            var data = new { };

            Response response = client.Create("<resourceGroupName>", "<customEntityStoreAssignmentName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Create_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            var data = new
            {
                properties = new
                {
                    principal = "<principal>",
                },
            };

            Response response = client.Create("<resourceGroupName>", "<customEntityStoreAssignmentName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("principal").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("entityStoreDatabaseLink").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Create_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            var data = new { };

            Response response = await client.CreateAsync("<resourceGroupName>", "<customEntityStoreAssignmentName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Create_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            var data = new
            {
                properties = new
                {
                    principal = "<principal>",
                },
            };

            Response response = await client.CreateAsync("<resourceGroupName>", "<customEntityStoreAssignmentName>", RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
            Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("principal").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("entityStoreDatabaseLink").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            Response response = client.Delete("<resourceGroupName>", "<customEntityStoreAssignmentName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            Response response = client.Delete("<resourceGroupName>", "<customEntityStoreAssignmentName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            Response response = await client.DeleteAsync("<resourceGroupName>", "<customEntityStoreAssignmentName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            Response response = await client.DeleteAsync("<resourceGroupName>", "<customEntityStoreAssignmentName>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetCustomEntityStoreAssignmentsByResourceGroup()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            foreach (var item in client.GetCustomEntityStoreAssignmentsByResourceGroup("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetCustomEntityStoreAssignmentsByResourceGroup_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            foreach (var item in client.GetCustomEntityStoreAssignmentsByResourceGroup("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("principal").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("entityStoreDatabaseLink").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetCustomEntityStoreAssignmentsByResourceGroup_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            await foreach (var item in client.GetCustomEntityStoreAssignmentsByResourceGroupAsync("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetCustomEntityStoreAssignmentsByResourceGroup_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            await foreach (var item in client.GetCustomEntityStoreAssignmentsByResourceGroupAsync("<resourceGroupName>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("principal").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("entityStoreDatabaseLink").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetCustomEntityStoreAssignmentsBySubscription()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            foreach (var item in client.GetCustomEntityStoreAssignmentsBySubscription(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetCustomEntityStoreAssignmentsBySubscription_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            foreach (var item in client.GetCustomEntityStoreAssignmentsBySubscription(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("principal").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("entityStoreDatabaseLink").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetCustomEntityStoreAssignmentsBySubscription_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            await foreach (var item in client.GetCustomEntityStoreAssignmentsBySubscriptionAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetCustomEntityStoreAssignmentsBySubscription_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new CustomEntityStoreAssignmentsClient("<subscriptionId>", credential);

            await foreach (var item in client.GetCustomEntityStoreAssignmentsBySubscriptionAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
                Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("principal").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("entityStoreDatabaseLink").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("type").ToString());
            }
        }
    }
}
