// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_IotSecuritySolutionAnalyticsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIotSecuritySolutionAnalytics()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionAnalyticsClient("<subscriptionId>", credential);

            Response response = client.GetIotSecuritySolutionAnalytics("<resourceGroupName>", "<solutionName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIotSecuritySolutionAnalytics_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionAnalyticsClient("<subscriptionId>", credential);

            Response response = client.GetIotSecuritySolutionAnalytics("<resourceGroupName>", "<solutionName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("metrics").GetProperty("high").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("metrics").GetProperty("medium").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("metrics").GetProperty("low").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("unhealthyDeviceCount").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("date").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("devicesMetrics").GetProperty("high").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("devicesMetrics").GetProperty("medium").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("devicesMetrics").GetProperty("low").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("topAlertedDevices")[0].GetProperty("deviceId").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("topAlertedDevices")[0].GetProperty("alertsCount").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("mostPrevalentDeviceAlerts")[0].GetProperty("alertDisplayName").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("mostPrevalentDeviceAlerts")[0].GetProperty("reportedSeverity").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("mostPrevalentDeviceAlerts")[0].GetProperty("alertsCount").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("mostPrevalentDeviceRecommendations")[0].GetProperty("recommendationDisplayName").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("mostPrevalentDeviceRecommendations")[0].GetProperty("reportedSeverity").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("mostPrevalentDeviceRecommendations")[0].GetProperty("devicesCount").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("nextLink").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIotSecuritySolutionAnalytics_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionAnalyticsClient("<subscriptionId>", credential);

            Response response = await client.GetIotSecuritySolutionAnalyticsAsync("<resourceGroupName>", "<solutionName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIotSecuritySolutionAnalytics_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionAnalyticsClient("<subscriptionId>", credential);

            Response response = await client.GetIotSecuritySolutionAnalyticsAsync("<resourceGroupName>", "<solutionName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("metrics").GetProperty("high").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("metrics").GetProperty("medium").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("metrics").GetProperty("low").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("unhealthyDeviceCount").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("date").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("devicesMetrics").GetProperty("high").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("devicesMetrics").GetProperty("medium").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("devicesMetrics").GetProperty("low").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("topAlertedDevices")[0].GetProperty("deviceId").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("topAlertedDevices")[0].GetProperty("alertsCount").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("mostPrevalentDeviceAlerts")[0].GetProperty("alertDisplayName").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("mostPrevalentDeviceAlerts")[0].GetProperty("reportedSeverity").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("mostPrevalentDeviceAlerts")[0].GetProperty("alertsCount").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("mostPrevalentDeviceRecommendations")[0].GetProperty("recommendationDisplayName").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("mostPrevalentDeviceRecommendations")[0].GetProperty("reportedSeverity").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("mostPrevalentDeviceRecommendations")[0].GetProperty("devicesCount").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("nextLink").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIotSecuritySolutionAnalytic()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionAnalyticsClient("<subscriptionId>", credential);

            Response response = client.GetIotSecuritySolutionAnalytic("<resourceGroupName>", "<solutionName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIotSecuritySolutionAnalytic_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionAnalyticsClient("<subscriptionId>", credential);

            Response response = client.GetIotSecuritySolutionAnalytic("<resourceGroupName>", "<solutionName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("metrics").GetProperty("high").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("metrics").GetProperty("medium").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("metrics").GetProperty("low").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("unhealthyDeviceCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("date").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("devicesMetrics").GetProperty("high").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("devicesMetrics").GetProperty("medium").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("devicesMetrics").GetProperty("low").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("topAlertedDevices")[0].GetProperty("deviceId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("topAlertedDevices")[0].GetProperty("alertsCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("mostPrevalentDeviceAlerts")[0].GetProperty("alertDisplayName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("mostPrevalentDeviceAlerts")[0].GetProperty("reportedSeverity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("mostPrevalentDeviceAlerts")[0].GetProperty("alertsCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("mostPrevalentDeviceRecommendations")[0].GetProperty("recommendationDisplayName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("mostPrevalentDeviceRecommendations")[0].GetProperty("reportedSeverity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("mostPrevalentDeviceRecommendations")[0].GetProperty("devicesCount").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIotSecuritySolutionAnalytic_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionAnalyticsClient("<subscriptionId>", credential);

            Response response = await client.GetIotSecuritySolutionAnalyticAsync("<resourceGroupName>", "<solutionName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIotSecuritySolutionAnalytic_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new IotSecuritySolutionAnalyticsClient("<subscriptionId>", credential);

            Response response = await client.GetIotSecuritySolutionAnalyticAsync("<resourceGroupName>", "<solutionName>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("metrics").GetProperty("high").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("metrics").GetProperty("medium").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("metrics").GetProperty("low").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("unhealthyDeviceCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("date").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("devicesMetrics").GetProperty("high").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("devicesMetrics").GetProperty("medium").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("devicesMetrics")[0].GetProperty("devicesMetrics").GetProperty("low").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("topAlertedDevices")[0].GetProperty("deviceId").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("topAlertedDevices")[0].GetProperty("alertsCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("mostPrevalentDeviceAlerts")[0].GetProperty("alertDisplayName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("mostPrevalentDeviceAlerts")[0].GetProperty("reportedSeverity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("mostPrevalentDeviceAlerts")[0].GetProperty("alertsCount").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("mostPrevalentDeviceRecommendations")[0].GetProperty("recommendationDisplayName").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("mostPrevalentDeviceRecommendations")[0].GetProperty("reportedSeverity").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("mostPrevalentDeviceRecommendations")[0].GetProperty("devicesCount").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }
    }
}
