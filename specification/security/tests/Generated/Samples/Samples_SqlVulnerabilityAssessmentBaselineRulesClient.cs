// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace SecurityCenter.Samples
{
    public class Samples_SqlVulnerabilityAssessmentBaselineRulesClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            var data = new { };

            Response response = client.CreateOrUpdate("<resourceId>", "<ruleId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            var data = new
            {
                latestScan = true,
                results = new[] {
        new[] {
            "<String>"
        }
    },
            };

            Response response = client.CreateOrUpdate("<resourceId>", "<ruleId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("results")[0][0].ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            var data = new { };

            Response response = await client.CreateOrUpdateAsync("<resourceId>", "<ruleId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            var data = new
            {
                latestScan = true,
                results = new[] {
        new[] {
            "<String>"
        }
    },
            };

            Response response = await client.CreateOrUpdateAsync("<resourceId>", "<ruleId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("results")[0][0].ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSqlVulnerabilityAssessmentBaselineRule()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            Response response = client.GetSqlVulnerabilityAssessmentBaselineRule("<resourceId>", "<ruleId>", "<workspaceId>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSqlVulnerabilityAssessmentBaselineRule_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            Response response = client.GetSqlVulnerabilityAssessmentBaselineRule("<resourceId>", "<ruleId>", "<workspaceId>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("results")[0][0].ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSqlVulnerabilityAssessmentBaselineRule_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            Response response = await client.GetSqlVulnerabilityAssessmentBaselineRuleAsync("<resourceId>", "<ruleId>", "<workspaceId>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSqlVulnerabilityAssessmentBaselineRule_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            Response response = await client.GetSqlVulnerabilityAssessmentBaselineRuleAsync("<resourceId>", "<ruleId>", "<workspaceId>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("results")[0][0].ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            Response response = client.Delete("<resourceId>", "<ruleId>", "<workspaceId>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            Response response = client.Delete("<resourceId>", "<ruleId>", "<workspaceId>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            Response response = await client.DeleteAsync("<resourceId>", "<ruleId>", "<workspaceId>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            Response response = await client.DeleteAsync("<resourceId>", "<ruleId>", "<workspaceId>");
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSqlVulnerabilityAssessmentBaselineRules()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            Response response = client.GetSqlVulnerabilityAssessmentBaselineRules("<resourceId>", "<workspaceId>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSqlVulnerabilityAssessmentBaselineRules_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            Response response = client.GetSqlVulnerabilityAssessmentBaselineRules("<resourceId>", "<workspaceId>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("results")[0][0].ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSqlVulnerabilityAssessmentBaselineRules_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            Response response = await client.GetSqlVulnerabilityAssessmentBaselineRulesAsync("<resourceId>", "<workspaceId>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSqlVulnerabilityAssessmentBaselineRules_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            Response response = await client.GetSqlVulnerabilityAssessmentBaselineRulesAsync("<resourceId>", "<workspaceId>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("results")[0][0].ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Add()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            var data = new { };

            Response response = client.Add("<resourceId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Add_AllParameters()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            var data = new
            {
                latestScan = true,
                results = new
                {
                    key = new[] {
            new[] {
                "<String>"
            }
        },
                },
            };

            Response response = client.Add("<resourceId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("results")[0][0].ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Add_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            var data = new { };

            Response response = await client.AddAsync("<resourceId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Add_AllParameters_Async()
        {
            var credential = new DefaultAzureCredential();
            var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

            var data = new
            {
                latestScan = true,
                results = new
                {
                    key = new[] {
            new[] {
                "<String>"
            }
        },
                },
            };

            Response response = await client.AddAsync("<resourceId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("results")[0][0].ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
        }
    }
}
