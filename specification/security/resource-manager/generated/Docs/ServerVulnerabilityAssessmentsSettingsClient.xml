<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetServerVulnerabilityAssessmentsSettingAsync(string,RequestContext)">
<example>
This sample shows how to call GetServerVulnerabilityAssessmentsSettingAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentsSettingsClient("<subscriptionId>", credential);

Response response = await client.GetServerVulnerabilityAssessmentsSettingAsync("<settingKind>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code>
</example>
    </member>
    <member name="GetServerVulnerabilityAssessmentsSetting(string,RequestContext)">
<example>
This sample shows how to call GetServerVulnerabilityAssessmentsSetting with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentsSettingsClient("<subscriptionId>", credential);

Response response = client.GetServerVulnerabilityAssessmentsSetting("<settingKind>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdateAsync(string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentsSettingsClient("<subscriptionId>", credential);

var data = new {
    kind = "AzureServersSetting",
};

Response response = await client.CreateOrUpdateAsync("<settingKind>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentsSettingsClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        selectedProvider = "MdeTvm",
    },
    kind = "AzureServersSetting",
};

Response response = await client.CreateOrUpdateAsync("<settingKind>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdate(string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentsSettingsClient("<subscriptionId>", credential);

var data = new {
    kind = "AzureServersSetting",
};

Response response = client.CreateOrUpdate("<settingKind>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentsSettingsClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        selectedProvider = "MdeTvm",
    },
    kind = "AzureServersSetting",
};

Response response = client.CreateOrUpdate("<settingKind>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("kind").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentsSettingsClient("<subscriptionId>", credential);

Response response = await client.DeleteAsync("<settingKind>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete(string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentsSettingsClient("<subscriptionId>", credential);

Response response = client.Delete("<settingKind>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetServerVulnerabilityAssessmentsSettingsBySubscriptionAsync(RequestContext)">
<example>
This sample shows how to call GetServerVulnerabilityAssessmentsSettingsBySubscriptionAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentsSettingsClient("<subscriptionId>", credential);

await foreach (var item in client.GetServerVulnerabilityAssessmentsSettingsBySubscriptionAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetServerVulnerabilityAssessmentsSettingsBySubscription(RequestContext)">
<example>
This sample shows how to call GetServerVulnerabilityAssessmentsSettingsBySubscription with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentsSettingsClient("<subscriptionId>", credential);

foreach (var item in client.GetServerVulnerabilityAssessmentsSettingsBySubscription(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("kind").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
}
]]></code>
</example>
    </member>
  </members>
</doc>