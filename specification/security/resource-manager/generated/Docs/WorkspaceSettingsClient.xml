<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetWorkspaceSettingAsync(string,RequestContext)">
<example>
This sample shows how to call GetWorkspaceSettingAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

Response response = await client.GetWorkspaceSettingAsync("<workspaceSettingName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("workspaceId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetWorkspaceSetting(string,RequestContext)">
<example>
This sample shows how to call GetWorkspaceSetting with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

Response response = client.GetWorkspaceSetting("<workspaceSettingName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("workspaceId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateAsync(string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

var data = new {};

Response response = await client.CreateAsync("<workspaceSettingName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        workspaceId = "<workspaceId>",
        scope = "<scope>",
    },
};

Response response = await client.CreateAsync("<workspaceSettingName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("workspaceId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="Create(string,RequestContent,RequestContext)">
<example>
This sample shows how to call Create with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

var data = new {};

Response response = client.Create("<workspaceSettingName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Create with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        workspaceId = "<workspaceId>",
        scope = "<scope>",
    },
};

Response response = client.Create("<workspaceSettingName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("workspaceId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="UpdateAsync(string,RequestContent,RequestContext)">
<example>
This sample shows how to call UpdateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

var data = new {};

Response response = await client.UpdateAsync("<workspaceSettingName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call UpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        workspaceId = "<workspaceId>",
        scope = "<scope>",
    },
};

Response response = await client.UpdateAsync("<workspaceSettingName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("workspaceId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="Update(string,RequestContent,RequestContext)">
<example>
This sample shows how to call Update with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

var data = new {};

Response response = client.Update("<workspaceSettingName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Update with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        workspaceId = "<workspaceId>",
        scope = "<scope>",
    },
};

Response response = client.Update("<workspaceSettingName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("workspaceId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

Response response = await client.DeleteAsync("<workspaceSettingName>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete(string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

Response response = client.Delete("<workspaceSettingName>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetWorkspaceSettingsAsync(RequestContext)">
<example>
This sample shows how to call GetWorkspaceSettingsAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

await foreach (var item in client.GetWorkspaceSettingsAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("workspaceId").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetWorkspaceSettings(RequestContext)">
<example>
This sample shows how to call GetWorkspaceSettings with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new WorkspaceSettingsClient("<subscriptionId>", credential);

foreach (var item in client.GetWorkspaceSettings(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("workspaceId").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("scope").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
  </members>
</doc>