<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSecurityConnectorAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetSecurityConnectorAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

Response response = await client.GetSecurityConnectorAsync("<resourceGroupName>", "<securityConnectorName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetSecurityConnector(string,string,RequestContext)">
<example>
This sample shows how to call GetSecurityConnector with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

Response response = client.GetSecurityConnector("<resourceGroupName>", "<securityConnectorName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdateAsync(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

var data = new {};

Response response = await client.CreateOrUpdateAsync("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        hierarchyIdentifier = "<hierarchyIdentifier>",
        environmentName = "Azure",
        offerings = new[] {
            new {
                nativeCloudConnection = new {
                    cloudRoleArn = "<cloudRoleArn>",
                },
                offeringType = "CspmMonitorAws",
            }
        },
        environmentData = new {
            organizationalData = new {
                stacksetName = "<stacksetName>",
                excludedAccountIds = new[] {
                    "<String>"
                },
                organizationMembershipType = "Organization",
            },
            regions = new[] {
                "<String>"
            },
            environmentType = "AwsAccount",
        },
    },
};

Response response = await client.CreateOrUpdateAsync("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdate(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

var data = new {};

Response response = client.CreateOrUpdate("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        hierarchyIdentifier = "<hierarchyIdentifier>",
        environmentName = "Azure",
        offerings = new[] {
            new {
                nativeCloudConnection = new {
                    cloudRoleArn = "<cloudRoleArn>",
                },
                offeringType = "CspmMonitorAws",
            }
        },
        environmentData = new {
            organizationalData = new {
                stacksetName = "<stacksetName>",
                excludedAccountIds = new[] {
                    "<String>"
                },
                organizationMembershipType = "Organization",
            },
            regions = new[] {
                "<String>"
            },
            environmentType = "AwsAccount",
        },
    },
};

Response response = client.CreateOrUpdate("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="UpdateAsync(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call UpdateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

var data = new {};

Response response = await client.UpdateAsync("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call UpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        hierarchyIdentifier = "<hierarchyIdentifier>",
        environmentName = "Azure",
        offerings = new[] {
            new {
                nativeCloudConnection = new {
                    cloudRoleArn = "<cloudRoleArn>",
                },
                offeringType = "CspmMonitorAws",
            }
        },
        environmentData = new {
            organizationalData = new {
                stacksetName = "<stacksetName>",
                excludedAccountIds = new[] {
                    "<String>"
                },
                organizationMembershipType = "Organization",
            },
            regions = new[] {
                "<String>"
            },
            environmentType = "AwsAccount",
        },
    },
};

Response response = await client.UpdateAsync("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="Update(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call Update with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

var data = new {};

Response response = client.Update("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Update with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        hierarchyIdentifier = "<hierarchyIdentifier>",
        environmentName = "Azure",
        offerings = new[] {
            new {
                nativeCloudConnection = new {
                    cloudRoleArn = "<cloudRoleArn>",
                },
                offeringType = "CspmMonitorAws",
            }
        },
        environmentData = new {
            organizationalData = new {
                stacksetName = "<stacksetName>",
                excludedAccountIds = new[] {
                    "<String>"
                },
                organizationMembershipType = "Organization",
            },
            regions = new[] {
                "<String>"
            },
            environmentType = "AwsAccount",
        },
    },
};

Response response = client.Update("<resourceGroupName>", "<securityConnectorName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(string,string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

Response response = await client.DeleteAsync("<resourceGroupName>", "<securityConnectorName>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete(string,string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

Response response = client.Delete("<resourceGroupName>", "<securityConnectorName>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetSecurityConnectorsAsync(RequestContext)">
<example>
This sample shows how to call GetSecurityConnectorsAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

await foreach (var item in client.GetSecurityConnectorsAsync(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSecurityConnectors(RequestContext)">
<example>
This sample shows how to call GetSecurityConnectors with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

foreach (var item in client.GetSecurityConnectors(new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSecurityConnectorsByResourceGroupAsync(string,RequestContext)">
<example>
This sample shows how to call GetSecurityConnectorsByResourceGroupAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

await foreach (var item in client.GetSecurityConnectorsByResourceGroupAsync("<resourceGroupName>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetSecurityConnectorsByResourceGroup(string,RequestContext)">
<example>
This sample shows how to call GetSecurityConnectorsByResourceGroup with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorsClient("<subscriptionId>", credential);

foreach (var item in client.GetSecurityConnectorsByResourceGroup("<resourceGroupName>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifier").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("hierarchyIdentifierTrialEndDate").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("environmentName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("offeringType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("offerings")[0].GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("environmentData").GetProperty("environmentType").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
  </members>
</doc>