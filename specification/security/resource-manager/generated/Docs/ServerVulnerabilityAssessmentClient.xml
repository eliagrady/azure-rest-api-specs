<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetServerVulnerabilityAssessmentsByExtendedResourceAsync(string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetServerVulnerabilityAssessmentsByExtendedResourceAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

Response response = await client.GetServerVulnerabilityAssessmentsByExtendedResourceAsync("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetServerVulnerabilityAssessmentsByExtendedResource(string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetServerVulnerabilityAssessmentsByExtendedResource with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

Response response = client.GetServerVulnerabilityAssessmentsByExtendedResource("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetServerVulnerabilityAssessmentAsync(string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetServerVulnerabilityAssessmentAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

Response response = await client.GetServerVulnerabilityAssessmentAsync("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetServerVulnerabilityAssessment(string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetServerVulnerabilityAssessment with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

Response response = client.GetServerVulnerabilityAssessment("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdateAsync(string,string,string,string,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

Response response = await client.CreateOrUpdateAsync("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdate(string,string,string,string,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

Response response = client.CreateOrUpdate("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(WaitUntil,string,string,string,string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

var operation = await client.DeleteAsync(WaitUntil.Completed, "<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>");

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="Delete(WaitUntil,string,string,string,string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new ServerVulnerabilityAssessmentClient("<subscriptionId>", credential);

var operation = client.Delete(WaitUntil.Completed, "<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>");

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
  </members>
</doc>