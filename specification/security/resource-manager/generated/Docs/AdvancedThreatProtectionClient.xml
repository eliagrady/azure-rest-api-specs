<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetAdvancedThreatProtectionAsync(string,RequestContext)">
<example>
This sample shows how to call GetAdvancedThreatProtectionAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AdvancedThreatProtectionClient(credential);

Response response = await client.GetAdvancedThreatProtectionAsync("<resourceId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("isEnabled").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetAdvancedThreatProtection(string,RequestContext)">
<example>
This sample shows how to call GetAdvancedThreatProtection with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AdvancedThreatProtectionClient(credential);

Response response = client.GetAdvancedThreatProtection("<resourceId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("isEnabled").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateAsync(string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AdvancedThreatProtectionClient(credential);

var data = new {};

Response response = await client.CreateAsync("<resourceId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AdvancedThreatProtectionClient(credential);

var data = new {
    properties = new {
        isEnabled = true,
    },
};

Response response = await client.CreateAsync("<resourceId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("isEnabled").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="Create(string,RequestContent,RequestContext)">
<example>
This sample shows how to call Create with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AdvancedThreatProtectionClient(credential);

var data = new {};

Response response = client.Create("<resourceId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Create with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AdvancedThreatProtectionClient(credential);

var data = new {
    properties = new {
        isEnabled = true,
    },
};

Response response = client.Create("<resourceId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("isEnabled").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
  </members>
</doc>