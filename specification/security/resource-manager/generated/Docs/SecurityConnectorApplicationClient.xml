<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSecurityConnectorApplicationAsync(string,string,string,RequestContext)">
<example>
This sample shows how to call GetSecurityConnectorApplicationAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorApplicationClient("<subscriptionId>", credential);

Response response = await client.GetSecurityConnectorApplicationAsync("<resourceGroupName>", "<securityConnectorName>", "<applicationId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceResourceType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("conditionSets")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetSecurityConnectorApplication(string,string,string,RequestContext)">
<example>
This sample shows how to call GetSecurityConnectorApplication with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorApplicationClient("<subscriptionId>", credential);

Response response = client.GetSecurityConnectorApplication("<resourceGroupName>", "<securityConnectorName>", "<applicationId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceResourceType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("conditionSets")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdateAsync(string,string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorApplicationClient("<subscriptionId>", credential);

var data = new {};

Response response = await client.CreateOrUpdateAsync("<resourceGroupName>", "<securityConnectorName>", "<applicationId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorApplicationClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        displayName = "<displayName>",
        description = "<description>",
        sourceResourceType = "Assessments",
        conditionSets = new[] {
            new {}
        },
    },
};

Response response = await client.CreateOrUpdateAsync("<resourceGroupName>", "<securityConnectorName>", "<applicationId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceResourceType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("conditionSets")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdate(string,string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorApplicationClient("<subscriptionId>", credential);

var data = new {};

Response response = client.CreateOrUpdate("<resourceGroupName>", "<securityConnectorName>", "<applicationId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorApplicationClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        displayName = "<displayName>",
        description = "<description>",
        sourceResourceType = "Assessments",
        conditionSets = new[] {
            new {}
        },
    },
};

Response response = client.CreateOrUpdate("<resourceGroupName>", "<securityConnectorName>", "<applicationId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceResourceType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("conditionSets")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(string,string,string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorApplicationClient("<subscriptionId>", credential);

Response response = await client.DeleteAsync("<resourceGroupName>", "<securityConnectorName>", "<applicationId>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete(string,string,string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SecurityConnectorApplicationClient("<subscriptionId>", credential);

Response response = client.Delete("<resourceGroupName>", "<securityConnectorName>", "<applicationId>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
  </members>
</doc>