<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateOrUpdateAsync(string,string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

var data = new {};

Response response = await client.CreateOrUpdateAsync("<resourceId>", "<ruleId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

var data = new {
    latestScan = true,
    results = new[] {
        new[] {
            "<String>"
        }
    },
};

Response response = await client.CreateOrUpdateAsync("<resourceId>", "<ruleId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("results")[0][0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdate(string,string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

var data = new {};

Response response = client.CreateOrUpdate("<resourceId>", "<ruleId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

var data = new {
    latestScan = true,
    results = new[] {
        new[] {
            "<String>"
        }
    },
};

Response response = client.CreateOrUpdate("<resourceId>", "<ruleId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("results")[0][0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetSqlVulnerabilityAssessmentBaselineRuleAsync(string,string,string,RequestContext)">
<example>
This sample shows how to call GetSqlVulnerabilityAssessmentBaselineRuleAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

Response response = await client.GetSqlVulnerabilityAssessmentBaselineRuleAsync("<resourceId>", "<ruleId>", "<workspaceId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("results")[0][0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetSqlVulnerabilityAssessmentBaselineRule(string,string,string,RequestContext)">
<example>
This sample shows how to call GetSqlVulnerabilityAssessmentBaselineRule with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

Response response = client.GetSqlVulnerabilityAssessmentBaselineRule("<resourceId>", "<ruleId>", "<workspaceId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("results")[0][0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(string,string,string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

Response response = await client.DeleteAsync("<resourceId>", "<ruleId>", "<workspaceId>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete(string,string,string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

Response response = client.Delete("<resourceId>", "<ruleId>", "<workspaceId>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetSqlVulnerabilityAssessmentBaselineRulesAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetSqlVulnerabilityAssessmentBaselineRulesAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

Response response = await client.GetSqlVulnerabilityAssessmentBaselineRulesAsync("<resourceId>", "<workspaceId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("results")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetSqlVulnerabilityAssessmentBaselineRules(string,string,RequestContext)">
<example>
This sample shows how to call GetSqlVulnerabilityAssessmentBaselineRules with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

Response response = client.GetSqlVulnerabilityAssessmentBaselineRules("<resourceId>", "<workspaceId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("results")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="AddAsync(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call AddAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

var data = new {};

Response response = await client.AddAsync("<resourceId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call AddAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

var data = new {
    latestScan = true,
    results = new {
        key = new[] {
            new[] {
                "<String>"
            }
        },
    },
};

Response response = await client.AddAsync("<resourceId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("results")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="Add(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call Add with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

var data = new {};

Response response = client.Add("<resourceId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Add with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentBaselineRulesClient(credential);

var data = new {
    latestScan = true,
    results = new {
        key = new[] {
            new[] {
                "<String>"
            }
        },
    },
};

Response response = client.Add("<resourceId>", "<workspaceId>", RequestContent.Create(data), new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("results")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
]]></code>
</example>
    </member>
  </members>
</doc>