<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetAdaptiveNetworkHardeningAsync(string,string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetAdaptiveNetworkHardeningAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AdaptiveNetworkHardeningsClient("<subscriptionId>", credential);

Response response = await client.GetAdaptiveNetworkHardeningAsync("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", "<adaptiveNetworkHardeningResourceName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("direction").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("destinationPort").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("protocols")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("ipAddresses")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rulesCalculationTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("effectiveNetworkSecurityGroups")[0].GetProperty("networkInterface").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("effectiveNetworkSecurityGroups")[0].GetProperty("networkSecurityGroups")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetAdaptiveNetworkHardening(string,string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetAdaptiveNetworkHardening with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AdaptiveNetworkHardeningsClient("<subscriptionId>", credential);

Response response = client.GetAdaptiveNetworkHardening("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", "<adaptiveNetworkHardeningResourceName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("direction").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("destinationPort").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("protocols")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("ipAddresses")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rulesCalculationTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("effectiveNetworkSecurityGroups")[0].GetProperty("networkInterface").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("effectiveNetworkSecurityGroups")[0].GetProperty("networkSecurityGroups")[0].ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetAdaptiveNetworkHardeningsByExtendedResourceAsync(string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetAdaptiveNetworkHardeningsByExtendedResourceAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AdaptiveNetworkHardeningsClient("<subscriptionId>", credential);

await foreach (var item in client.GetAdaptiveNetworkHardeningsByExtendedResourceAsync("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("direction").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("destinationPort").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("protocols")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("ipAddresses")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("rulesCalculationTime").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("effectiveNetworkSecurityGroups")[0].GetProperty("networkInterface").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("effectiveNetworkSecurityGroups")[0].GetProperty("networkSecurityGroups")[0].ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetAdaptiveNetworkHardeningsByExtendedResource(string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetAdaptiveNetworkHardeningsByExtendedResource with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AdaptiveNetworkHardeningsClient("<subscriptionId>", credential);

foreach (var item in client.GetAdaptiveNetworkHardeningsByExtendedResource("<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("direction").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("destinationPort").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("protocols")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("rules")[0].GetProperty("ipAddresses")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("rulesCalculationTime").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("effectiveNetworkSecurityGroups")[0].GetProperty("networkInterface").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("effectiveNetworkSecurityGroups")[0].GetProperty("networkSecurityGroups")[0].ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="EnforceAsync(WaitUntil,string,string,string,string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call EnforceAsync with required parameters and request content.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AdaptiveNetworkHardeningsClient("<subscriptionId>", credential);

var data = new {
    rules = new[] {
        new {
            name = "<name>",
            direction = "Inbound",
            destinationPort = 1234,
            protocols = new[] {
                "TCP"
            },
            ipAddresses = new[] {
                "<String>"
            },
        }
    },
    networkSecurityGroups = new[] {
        "<String>"
    },
};

var operation = await client.EnforceAsync(WaitUntil.Completed, "<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", "<adaptiveNetworkHardeningResourceName>", RequestContent.Create(data));

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="Enforce(WaitUntil,string,string,string,string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call Enforce with required parameters and request content.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new AdaptiveNetworkHardeningsClient("<subscriptionId>", credential);

var data = new {
    rules = new[] {
        new {
            name = "<name>",
            direction = "Inbound",
            destinationPort = 1234,
            protocols = new[] {
                "TCP"
            },
            ipAddresses = new[] {
                "<String>"
            },
        }
    },
    networkSecurityGroups = new[] {
        "<String>"
    },
};

var operation = client.Enforce(WaitUntil.Completed, "<resourceGroupName>", "<resourceNamespace>", "<resourceType>", "<resourceName>", "<adaptiveNetworkHardeningResourceName>", RequestContent.Create(data));

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
  </members>
</doc>