<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetIotSecuritySolutionAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetIotSecuritySolutionAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

Response response = await client.GetIotSecuritySolutionAsync("<resourceGroupName>", "<solutionName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("workspace").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("export")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("disabledDataSources")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("iotHubs")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("query").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("querySubscriptions")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("autoDiscoveredResources")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("recommendationType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("unmaskedIpLoggingStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("workspace").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("dataTypes")[0].ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetIotSecuritySolution(string,string,RequestContext)">
<example>
This sample shows how to call GetIotSecuritySolution with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

Response response = client.GetIotSecuritySolution("<resourceGroupName>", "<solutionName>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("workspace").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("export")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("disabledDataSources")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("iotHubs")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("query").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("querySubscriptions")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("autoDiscoveredResources")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("recommendationType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("unmaskedIpLoggingStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("workspace").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("dataTypes")[0].ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdateAsync(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

var data = new {};

Response response = await client.CreateOrUpdateAsync("<resourceGroupName>", "<solutionName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

var data = new {
    location = "<location>",
    properties = new {
        workspace = "<workspace>",
        displayName = "<displayName>",
        status = "Enabled",
        export = new[] {
            "RawEvents"
        },
        disabledDataSources = new[] {
            "TwinData"
        },
        iotHubs = new[] {
            "<String>"
        },
        userDefinedResources = new {
            query = "<query>",
            querySubscriptions = new[] {
                "<String>"
            },
        },
        recommendationsConfiguration = new[] {
            new {
                recommendationType = "IoT_ACRAuthentication",
                status = "Disabled",
            }
        },
        unmaskedIpLoggingStatus = "Disabled",
        additionalWorkspaces = new[] {
            new {
                workspace = "<workspace>",
                type = "Sentinel",
                dataTypes = new[] {
                    "Alerts"
                },
            }
        },
    },
};

Response response = await client.CreateOrUpdateAsync("<resourceGroupName>", "<solutionName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("workspace").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("export")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("disabledDataSources")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("iotHubs")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("query").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("querySubscriptions")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("autoDiscoveredResources")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("recommendationType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("unmaskedIpLoggingStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("workspace").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("dataTypes")[0].ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdate(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

var data = new {};

Response response = client.CreateOrUpdate("<resourceGroupName>", "<solutionName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

var data = new {
    location = "<location>",
    properties = new {
        workspace = "<workspace>",
        displayName = "<displayName>",
        status = "Enabled",
        export = new[] {
            "RawEvents"
        },
        disabledDataSources = new[] {
            "TwinData"
        },
        iotHubs = new[] {
            "<String>"
        },
        userDefinedResources = new {
            query = "<query>",
            querySubscriptions = new[] {
                "<String>"
            },
        },
        recommendationsConfiguration = new[] {
            new {
                recommendationType = "IoT_ACRAuthentication",
                status = "Disabled",
            }
        },
        unmaskedIpLoggingStatus = "Disabled",
        additionalWorkspaces = new[] {
            new {
                workspace = "<workspace>",
                type = "Sentinel",
                dataTypes = new[] {
                    "Alerts"
                },
            }
        },
    },
};

Response response = client.CreateOrUpdate("<resourceGroupName>", "<solutionName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("workspace").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("export")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("disabledDataSources")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("iotHubs")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("query").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("querySubscriptions")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("autoDiscoveredResources")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("recommendationType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("unmaskedIpLoggingStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("workspace").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("dataTypes")[0].ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="UpdateAsync(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call UpdateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

var data = new {};

Response response = await client.UpdateAsync("<resourceGroupName>", "<solutionName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call UpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        userDefinedResources = new {
            query = "<query>",
            querySubscriptions = new[] {
                "<String>"
            },
        },
        recommendationsConfiguration = new[] {
            new {
                recommendationType = "IoT_ACRAuthentication",
                status = "Disabled",
            }
        },
    },
    tags = new {
        key = "<String>",
    },
};

Response response = await client.UpdateAsync("<resourceGroupName>", "<solutionName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("workspace").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("export")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("disabledDataSources")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("iotHubs")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("query").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("querySubscriptions")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("autoDiscoveredResources")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("recommendationType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("unmaskedIpLoggingStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("workspace").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("dataTypes")[0].ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="Update(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call Update with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

var data = new {};

Response response = client.Update("<resourceGroupName>", "<solutionName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call Update with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

var data = new {
    properties = new {
        userDefinedResources = new {
            query = "<query>",
            querySubscriptions = new[] {
                "<String>"
            },
        },
        recommendationsConfiguration = new[] {
            new {
                recommendationType = "IoT_ACRAuthentication",
                status = "Disabled",
            }
        },
    },
    tags = new {
        key = "<String>",
    },
};

Response response = client.Update("<resourceGroupName>", "<solutionName>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("location").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("workspace").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("export")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("disabledDataSources")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("iotHubs")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("query").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("querySubscriptions")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("autoDiscoveredResources")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("recommendationType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("unmaskedIpLoggingStatus").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("workspace").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("dataTypes")[0].ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="DeleteAsync(string,string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

Response response = await client.DeleteAsync("<resourceGroupName>", "<solutionName>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="Delete(string,string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

Response response = client.Delete("<resourceGroupName>", "<solutionName>");
Console.WriteLine(response.Status);
]]></code>
</example>
    </member>
    <member name="GetIotSecuritySolutionsBySubscriptionAsync(string,RequestContext)">
<example>
This sample shows how to call GetIotSecuritySolutionsBySubscriptionAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

await foreach (var item in client.GetIotSecuritySolutionsBySubscriptionAsync("<filter>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("workspace").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("export")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("disabledDataSources")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("iotHubs")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("query").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("querySubscriptions")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("autoDiscoveredResources")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("recommendationType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("unmaskedIpLoggingStatus").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("workspace").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("dataTypes")[0].ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetIotSecuritySolutionsBySubscription(string,RequestContext)">
<example>
This sample shows how to call GetIotSecuritySolutionsBySubscription with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

foreach (var item in client.GetIotSecuritySolutionsBySubscription("<filter>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("workspace").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("export")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("disabledDataSources")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("iotHubs")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("query").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("querySubscriptions")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("autoDiscoveredResources")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("recommendationType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("unmaskedIpLoggingStatus").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("workspace").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("dataTypes")[0].ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetIotSecuritySolutionsByResourceGroupAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetIotSecuritySolutionsByResourceGroupAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

await foreach (var item in client.GetIotSecuritySolutionsByResourceGroupAsync("<resourceGroupName>", "<filter>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("workspace").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("export")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("disabledDataSources")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("iotHubs")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("query").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("querySubscriptions")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("autoDiscoveredResources")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("recommendationType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("unmaskedIpLoggingStatus").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("workspace").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("dataTypes")[0].ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetIotSecuritySolutionsByResourceGroup(string,string,RequestContext)">
<example>
This sample shows how to call GetIotSecuritySolutionsByResourceGroup with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new IotSecuritySolutionClient("<subscriptionId>", credential);

foreach (var item in client.GetIotSecuritySolutionsByResourceGroup("<resourceGroupName>", "<filter>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("location").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("workspace").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("export")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("disabledDataSources")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("iotHubs")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("query").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("userDefinedResources").GetProperty("querySubscriptions")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("autoDiscoveredResources")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("recommendationType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("recommendationsConfiguration")[0].GetProperty("status").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("unmaskedIpLoggingStatus").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("workspace").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("additionalWorkspaces")[0].GetProperty("dataTypes")[0].ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("createdAt").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedBy").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedByType").ToString());
    Console.WriteLine(result.GetProperty("systemData").GetProperty("lastModifiedAt").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
  </members>
</doc>