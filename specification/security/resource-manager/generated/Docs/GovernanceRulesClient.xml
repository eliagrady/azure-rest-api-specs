<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetGovernanceRuleAsync(string,string,RequestContext)">
<example>
This sample shows how to call GetGovernanceRuleAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

Response response = await client.GetGovernanceRuleAsync("<scope>", "<ruleId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("tenantId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("remediationTimeframe").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("isGracePeriod").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rulePriority").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("isDisabled").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceResourceType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("excludedScopes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("conditionSets")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("includeMemberScopes").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ownerSource").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ownerSource").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("governanceEmailNotification").GetProperty("disableManagerEmailNotification").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("governanceEmailNotification").GetProperty("disableOwnerEmailNotification").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("updatedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("updatedOn").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetGovernanceRule(string,string,RequestContext)">
<example>
This sample shows how to call GetGovernanceRule with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

Response response = client.GetGovernanceRule("<scope>", "<ruleId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("tenantId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("remediationTimeframe").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("isGracePeriod").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rulePriority").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("isDisabled").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceResourceType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("excludedScopes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("conditionSets")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("includeMemberScopes").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ownerSource").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ownerSource").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("governanceEmailNotification").GetProperty("disableManagerEmailNotification").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("governanceEmailNotification").GetProperty("disableOwnerEmailNotification").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("updatedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("updatedOn").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdateAsync(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdateAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

var data = new {};

Response response = await client.CreateOrUpdateAsync("<scope>", "<ruleId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

var data = new {
    properties = new {
        displayName = "<displayName>",
        description = "<description>",
        remediationTimeframe = "<remediationTimeframe>",
        isGracePeriod = true,
        rulePriority = 1234,
        isDisabled = true,
        ruleType = "Integrated",
        sourceResourceType = "Assessments",
        excludedScopes = new[] {
            "<String>"
        },
        conditionSets = new[] {
            new {}
        },
        includeMemberScopes = true,
        ownerSource = new {
            type = "ByTag",
            value = "<value>",
        },
        governanceEmailNotification = new {
            disableManagerEmailNotification = true,
            disableOwnerEmailNotification = true,
        },
        metadata = new {},
    },
};

Response response = await client.CreateOrUpdateAsync("<scope>", "<ruleId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("tenantId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("remediationTimeframe").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("isGracePeriod").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rulePriority").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("isDisabled").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceResourceType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("excludedScopes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("conditionSets")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("includeMemberScopes").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ownerSource").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ownerSource").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("governanceEmailNotification").GetProperty("disableManagerEmailNotification").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("governanceEmailNotification").GetProperty("disableOwnerEmailNotification").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("updatedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("updatedOn").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="CreateOrUpdate(string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call CreateOrUpdate with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

var data = new {};

Response response = client.CreateOrUpdate("<scope>", "<ruleId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

var data = new {
    properties = new {
        displayName = "<displayName>",
        description = "<description>",
        remediationTimeframe = "<remediationTimeframe>",
        isGracePeriod = true,
        rulePriority = 1234,
        isDisabled = true,
        ruleType = "Integrated",
        sourceResourceType = "Assessments",
        excludedScopes = new[] {
            "<String>"
        },
        conditionSets = new[] {
            new {}
        },
        includeMemberScopes = true,
        ownerSource = new {
            type = "ByTag",
            value = "<value>",
        },
        governanceEmailNotification = new {
            disableManagerEmailNotification = true,
            disableOwnerEmailNotification = true,
        },
        metadata = new {},
    },
};

Response response = client.CreateOrUpdate("<scope>", "<ruleId>", RequestContent.Create(data));

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("tenantId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("remediationTimeframe").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("isGracePeriod").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("rulePriority").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("isDisabled").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("sourceResourceType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("excludedScopes")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("conditionSets")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("includeMemberScopes").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ownerSource").GetProperty("type").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ownerSource").GetProperty("value").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("governanceEmailNotification").GetProperty("disableManagerEmailNotification").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("governanceEmailNotification").GetProperty("disableOwnerEmailNotification").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("createdBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("createdOn").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("updatedBy").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("updatedOn").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="OperationResultsAsync(string,string,string,RequestContext)">
<example>
This sample shows how to call OperationResultsAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

Response response = await client.OperationResultsAsync("<scope>", "<ruleId>", "<operationId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
</example>
    </member>
    <member name="OperationResults(string,string,string,RequestContext)">
<example>
This sample shows how to call OperationResults with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

Response response = client.OperationResults("<scope>", "<ruleId>", "<operationId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("status").ToString());
]]></code>
</example>
    </member>
    <member name="GetGovernanceRulesAsync(string,RequestContext)">
<example>
This sample shows how to call GetGovernanceRulesAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

await foreach (var item in client.GetGovernanceRulesAsync("<scope>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("tenantId").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("remediationTimeframe").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("isGracePeriod").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("rulePriority").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("isDisabled").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("ruleType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceResourceType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("excludedScopes")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("conditionSets")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("includeMemberScopes").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("ownerSource").GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("ownerSource").GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("governanceEmailNotification").GetProperty("disableManagerEmailNotification").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("governanceEmailNotification").GetProperty("disableOwnerEmailNotification").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("createdOn").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("updatedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("updatedOn").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="GetGovernanceRules(string,RequestContext)">
<example>
This sample shows how to call GetGovernanceRules with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

foreach (var item in client.GetGovernanceRules("<scope>", new RequestContext()))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("properties").GetProperty("tenantId").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("displayName").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("description").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("remediationTimeframe").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("isGracePeriod").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("rulePriority").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("isDisabled").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("ruleType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("sourceResourceType").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("excludedScopes")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("conditionSets")[0].ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("includeMemberScopes").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("ownerSource").GetProperty("type").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("ownerSource").GetProperty("value").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("governanceEmailNotification").GetProperty("disableManagerEmailNotification").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("governanceEmailNotification").GetProperty("disableOwnerEmailNotification").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("createdBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("createdOn").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("updatedBy").ToString());
    Console.WriteLine(result.GetProperty("properties").GetProperty("metadata").GetProperty("updatedOn").ToString());
    Console.WriteLine(result.GetProperty("id").ToString());
    Console.WriteLine(result.GetProperty("name").ToString());
    Console.WriteLine(result.GetProperty("type").ToString());
}
]]></code>
</example>
    </member>
    <member name="DeleteAsync(WaitUntil,string,string,RequestContext)">
<example>
This sample shows how to call DeleteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

var operation = await client.DeleteAsync(WaitUntil.Completed, "<scope>", "<ruleId>");

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="Delete(WaitUntil,string,string,RequestContext)">
<example>
This sample shows how to call Delete with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

var operation = client.Delete(WaitUntil.Completed, "<scope>", "<ruleId>");

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="ExecuteAsync(WaitUntil,string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call ExecuteAsync with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

var data = new {};

var operation = await client.ExecuteAsync(WaitUntil.Completed, "<scope>", "<ruleId>", RequestContent.Create(data), new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
This sample shows how to call ExecuteAsync with all parameters and request content.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

var data = new {
    @override = true,
};

var operation = await client.ExecuteAsync(WaitUntil.Completed, "<scope>", "<ruleId>", RequestContent.Create(data), new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
    <member name="Execute(WaitUntil,string,string,RequestContent,RequestContext)">
<example>
This sample shows how to call Execute with required parameters.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

var data = new {};

var operation = client.Execute(WaitUntil.Completed, "<scope>", "<ruleId>", RequestContent.Create(data), new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
This sample shows how to call Execute with all parameters and request content.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new GovernanceRulesClient(credential);

var data = new {
    @override = true,
};

var operation = client.Execute(WaitUntil.Completed, "<scope>", "<ruleId>", RequestContent.Create(data), new RequestContext());

Console.WriteLine(operation.GetRawResponse().Status);
]]></code>
</example>
    </member>
  </members>
</doc>