<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetSqlVulnerabilityAssessmentScanResultAsync(string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetSqlVulnerabilityAssessmentScanResultAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentScanResultsClient(credential);

Response response = await client.GetSqlVulnerabilityAssessmentScanResultAsync("<resourceId>", "<scanId>", "<scanResultId>", "<workspaceId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("isTrimmed").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("queryResults")[0][0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("remediation").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("remediation").GetProperty("scripts")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("remediation").GetProperty("automated").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("remediation").GetProperty("portalLink").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("baseline").GetProperty("expectedResults")[0][0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("baseline").GetProperty("updatedTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("resultsNotInBaseline")[0][0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("resultsOnlyInBaseline")[0][0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("ruleId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("severity").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("category").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("ruleType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("title").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("rationale").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("queryCheck").GetProperty("query").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("queryCheck").GetProperty("expectedResult")[0][0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("queryCheck").GetProperty("columnNames")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("benchmarkReferences")[0].GetProperty("benchmark").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("benchmarkReferences")[0].GetProperty("reference").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetSqlVulnerabilityAssessmentScanResult(string,string,string,string,RequestContext)">
<example>
This sample shows how to call GetSqlVulnerabilityAssessmentScanResult with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentScanResultsClient(credential);

Response response = client.GetSqlVulnerabilityAssessmentScanResult("<resourceId>", "<scanId>", "<scanResultId>", "<workspaceId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("isTrimmed").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("queryResults")[0][0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("remediation").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("remediation").GetProperty("scripts")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("remediation").GetProperty("automated").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("remediation").GetProperty("portalLink").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("baseline").GetProperty("expectedResults")[0][0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("baseline").GetProperty("updatedTime").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("resultsNotInBaseline")[0][0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("resultsOnlyInBaseline")[0][0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("ruleId").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("severity").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("category").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("ruleType").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("title").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("rationale").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("queryCheck").GetProperty("query").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("queryCheck").GetProperty("expectedResult")[0][0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("queryCheck").GetProperty("columnNames")[0].ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("benchmarkReferences")[0].GetProperty("benchmark").ToString());
Console.WriteLine(result.GetProperty("properties").GetProperty("ruleMetadata").GetProperty("benchmarkReferences")[0].GetProperty("reference").ToString());
Console.WriteLine(result.GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetSqlVulnerabilityAssessmentScanResultsAsync(string,string,string,RequestContext)">
<example>
This sample shows how to call GetSqlVulnerabilityAssessmentScanResultsAsync with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentScanResultsClient(credential);

Response response = await client.GetSqlVulnerabilityAssessmentScanResultsAsync("<resourceId>", "<scanId>", "<workspaceId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleId").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("isTrimmed").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("queryResults")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("remediation").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("remediation").GetProperty("scripts")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("remediation").GetProperty("automated").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("remediation").GetProperty("portalLink").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("baseline").GetProperty("expectedResults")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("baseline").GetProperty("updatedTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("resultsNotInBaseline")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("resultsOnlyInBaseline")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("ruleId").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("severity").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("category").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("ruleType").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("title").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("rationale").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("queryCheck").GetProperty("query").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("queryCheck").GetProperty("expectedResult")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("queryCheck").GetProperty("columnNames")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("benchmarkReferences")[0].GetProperty("benchmark").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("benchmarkReferences")[0].GetProperty("reference").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
]]></code>
</example>
    </member>
    <member name="GetSqlVulnerabilityAssessmentScanResults(string,string,string,RequestContext)">
<example>
This sample shows how to call GetSqlVulnerabilityAssessmentScanResults with required parameters and parse the result.
<code><![CDATA[
var credential = new DefaultAzureCredential();
var client = new SqlVulnerabilityAssessmentScanResultsClient(credential);

Response response = client.GetSqlVulnerabilityAssessmentScanResults("<resourceId>", "<scanId>", "<workspaceId>", new RequestContext());

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleId").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("isTrimmed").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("queryResults")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("remediation").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("remediation").GetProperty("scripts")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("remediation").GetProperty("automated").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("remediation").GetProperty("portalLink").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("baseline").GetProperty("expectedResults")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("baseline").GetProperty("updatedTime").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("resultsNotInBaseline")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("baselineAdjustedResult").GetProperty("resultsOnlyInBaseline")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("ruleId").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("severity").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("category").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("ruleType").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("title").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("description").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("rationale").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("queryCheck").GetProperty("query").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("queryCheck").GetProperty("expectedResult")[0][0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("queryCheck").GetProperty("columnNames")[0].ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("benchmarkReferences")[0].GetProperty("benchmark").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("properties").GetProperty("ruleMetadata").GetProperty("benchmarkReferences")[0].GetProperty("reference").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("id").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("value")[0].GetProperty("type").ToString());
]]></code>
</example>
    </member>
  </members>
</doc>